#customer-list {
  .customer {
    display: inline-flex;

    &:after {
      font-size: 0.3rem;
      margin-left: 0.5em;
      display: inline-block;
      width: 3em;
      height: 1em;
      border-radius: 50%;
    }
  }

  /* prettier-ignore */
  .customer {
/*[[[cog
import cog
from itertools import combinations

items = [
  ('uninvoiced', 'blue'),
  ('unpaid', 'orange'),
  ('overdue', 'red'),
]

for size in range(1, len(items) + 1):
    for circles in combinations(items, size):
        classes = "".join([f".{circle[0]}" for circle in circles])
        width = 100 + (125 * (len(circles) - 1))
        svg = ""
        for i, circle in enumerate(circles):
            svg += f'<circle fill="{circle[1]}" cx="{50 + (125 * i)}" cy="50" r="50"/>'

        cog.outl(f"""&{classes}:after {{
  content: url('data:image/svg+xml; utf8,<svg width="100%" height="100%" viewBox="0 0 {width} 100" xmlns="http://www.w3.org/2000/svg">{svg}</svg>');
  width: {len(circles)}em;
}}\n""")
]]]*/
&.uninvoiced:after {
  content: url('data:image/svg+xml; utf8,<svg width="100%" height="100%" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><circle fill="blue" cx="50" cy="50" r="50"/></svg>');
  width: 1em;
}

&.unpaid:after {
  content: url('data:image/svg+xml; utf8,<svg width="100%" height="100%" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><circle fill="orange" cx="50" cy="50" r="50"/></svg>');
  width: 1em;
}

&.overdue:after {
  content: url('data:image/svg+xml; utf8,<svg width="100%" height="100%" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><circle fill="red" cx="50" cy="50" r="50"/></svg>');
  width: 1em;
}

&.uninvoiced.unpaid:after {
  content: url('data:image/svg+xml; utf8,<svg width="100%" height="100%" viewBox="0 0 225 100" xmlns="http://www.w3.org/2000/svg"><circle fill="blue" cx="50" cy="50" r="50"/><circle fill="orange" cx="175" cy="50" r="50"/></svg>');
  width: 2em;
}

&.uninvoiced.overdue:after {
  content: url('data:image/svg+xml; utf8,<svg width="100%" height="100%" viewBox="0 0 225 100" xmlns="http://www.w3.org/2000/svg"><circle fill="blue" cx="50" cy="50" r="50"/><circle fill="red" cx="175" cy="50" r="50"/></svg>');
  width: 2em;
}

&.unpaid.overdue:after {
  content: url('data:image/svg+xml; utf8,<svg width="100%" height="100%" viewBox="0 0 225 100" xmlns="http://www.w3.org/2000/svg"><circle fill="orange" cx="50" cy="50" r="50"/><circle fill="red" cx="175" cy="50" r="50"/></svg>');
  width: 2em;
}

&.uninvoiced.unpaid.overdue:after {
  content: url('data:image/svg+xml; utf8,<svg width="100%" height="100%" viewBox="0 0 350 100" xmlns="http://www.w3.org/2000/svg"><circle fill="blue" cx="50" cy="50" r="50"/><circle fill="orange" cx="175" cy="50" r="50"/><circle fill="red" cx="300" cy="50" r="50"/></svg>');
  width: 3em;
}

/*[[[end]]] (checksum: e4878ef2b825889e609e7e4c04edd653)*/
  }
}
